#!/bin/bash

set -e

POSTGRES_DB=expat
POSTGRES_USER=expat
POSTGRES_PASSWORD=expat
POSTGRES_HOST=localhost
POSTGRES_PORT=5433

CONNECTION_STRING=postgres://$POSTGRES_PASSWORD:$POSTGRES_USER@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB

REST_ARGS="${@:2}"

gen() {
    echo -e "> Starting entity generation:"
    ts-node --transpile-only --files -r tsconfig-paths/register ../../../packages/pg/src/cli -d ../shared/src/entities/generated -i @projects/expat/shared/entities/generated -c $CONNECTION_STRING
    echo -e "> Entity generation success\n"
}

migration_run() {
    echo -e "> Starting migration:"
    ts-node --transpile-only --files -r tsconfig-paths/register ../../../packages/pg-migration/src/cli run $REST_ARGS -d src/migrations -c $CONNECTION_STRING
    echo -e "> Migration success\n"
}

migration_create() {
    echo -e "> Creating migration:"
    ts-node --transpile-only --files -r tsconfig-paths/register ../../../packages/pg-migration/src/cli create $REST_ARGS -d src/migrations -c $CONNECTION_STRING
    echo -e "> Migration created\n"
}

restart() {
    echo -e "> Restarting docker:"
    docker rm -f expat-db || true
    docker run -d --name expat-db -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -p $POSTGRES_PORT:5432 postgres && while ! nc -z $POSTGRES_HOST $POSTGRES_PORT; do sleep 1; done
    echo -e "> Restarting docker success\n"
}

gql_emit() {
    echo -e "> Emiting gql schema:"
    ts-node --transpile-only --files -r tsconfig-paths/register ../api/src/cli emit_gql $REST_ARGS
    echo -e "> Emiting gql schema success\n"
}

case $1 in

gen)
    gen
    ;;

migration:run)
    migration_run
    ;;

migration:create)
    migration_create
    ;;

restart)
    restart
    ;;

gql:emit)
    gql_emit
    ;;

prepare)
    restart
    migration_run
    gen
    ;;

*)
    echo "command is requred"
    ;;
esac
